name: Build and Deploy iOS App to TestFlight
on:
  push:
    branches:
      - your-new-branch-name

jobs:
  build-and-deploy:
    name: Build and Deploy iOS
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: stable
          architecture: x64

      - name: Install Flutter Dependencies
        run: |
          flutter pub get

      - name: Ensure iOS Setup
        run: |
          # If ios or .ios is missing, regenerate them
          if [ ! -d "ios" ] || [ ! -d ".ios" ]; then
            echo "iOS setup missing. Regenerating..."
            rm -rf ios .ios
            flutter create --platforms=ios --org com.atvandbuggy --project-name atvandbuggy_sales_app .
            flutter pub get
          fi
          # Ensure Podfile has the correct platform version
          cd ios
          if [ -f "Podfile" ]; then
            echo "Updating Podfile with platform :ios, '13.0'"
            sed -i '' 's/platform :ios.*/platform :ios, '\''13.0'\''/' Podfile || echo "platform :ios, '13.0'" >> Podfile
          else
            echo "Creating new Podfile with platform :ios, '13.0'"
            cat << EOF > Podfile
            platform :ios, '13.0'
            install! 'cocoapods', :deterministic_uuids => false
            target 'Runner' do
              use_frameworks!
              use_modular_headers!
              flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
            end
            EOF
          fi

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods -v 1.15.2
          pod --version

      - name: Install Pods
        run: |
          cd ios
          pod install --repo-update

      - name: Build iOS App
        env:
          DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $GITHUB_WORKSPACE/build/Runner.xcarchive \
            archive \
            CODE_SIGN_STYLE="Manual" \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            PROVISIONING_PROFILE="${{ secrets.PROVISIONING_PROFILE_UUID }}" \
            DEVELOPMENT_TEAM="T72CZ82T9L"

      - name: Export IPA
        run: |
          cd ios
          cat << EOF > ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>T72CZ82T9L</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>signingCertificate</key>
              <string>iPhone Distribution</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>com.atvandbuggy.sales.dev</key>
                  <string>match AppStore com.atvandbuggy.sales.dev</string>
              </dict>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
          </dict>
          </plist>
          EOF
          xcodebuild -exportArchive \
            -archivePath $GITHUB_WORKSPACE/build/Runner.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $GITHUB_WORKSPACE/build

      - name: Upload to TestFlight
        env:
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          API_ISSUER_ID: ${{ secrets.API_ISSUER_ID }}
          API_KEY_BASE64: ${{ secrets.API_KEY_BASE64 }}
        run: |
          echo "${API_KEY_BASE64}" | base64 --decode > api_key.p8
          xcrun altool --upload-app \
            -f $GITHUB_WORKSPACE/build/Runner.ipa \
            -t ios \
            --apiKey ${API_KEY_ID} \
            --apiIssuer ${API_ISSUER_ID} \
            --private-key-file api_key.p8
