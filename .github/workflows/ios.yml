name: Build and Deploy iOS App to TestFlight with API Key
on:
  push:
    branches:
      - your-new-branch-name 

jobs:
  build-and-deploy:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: stable
          architecture: x64

      - name: Install Flutter Dependencies
        run: |
          flutter pub get

      - name: Ensure iOS Setup
        run: |
          if [ ! -d "ios" ] || [ ! -d ".ios" ]; then
            echo "iOS setup missing. Regenerating..."
            rm -rf ios .ios
            flutter create --platforms=ios --org com.atvandbuggy --project-name atvandbuggy_sales_app .
            flutter pub get
          fi
          cd ios
          if [ -f "Podfile" ]; then
            sed -i '' "/platform :ios/d" Podfile
            echo "platform :ios, '13.0'" | cat - Podfile > temp && mv temp Podfile
          else
            echo "platform :ios, '13.0'" > Podfile
            echo "install! 'cocoapods', :deterministic_uuids => false" >> Podfile
            echo "target 'Runner' do" >> Podfile
            echo "  use_frameworks!" >> Podfile
            echo "  use_modular_headers!" >> Podfile
            echo "  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))" >> Podfile
            echo "end" >> Podfile
          fi

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods -v 1.15.2
          pod --version

      - name: Install Pods
        run: |
          cd ios
          pod install --repo-update

      - name: Build iOS App with Automatic Signing
        env:
          DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer
          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        run: |
          cd ios
          # Set up keychain for automatic signing
          security create-keychain -p "temp" build.keychain
          security unlock-keychain -p "temp" build.keychain
          security set-keychain-settings -t 3600 build.keychain

          # Authenticate with Apple ID for automatic signing
          echo "Authenticating with Apple ID..."
          xcrun xcodebuild -allowProvisioningUpdates \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $GITHUB_WORKSPACE/build/Runner.xcarchive \
            clean archive \
            CODE_SIGN_STYLE="Automatic" \
            DEVELOPMENT_TEAM="T72CZ82T9L" \
            -authenticationKeyPath /tmp/authkey.p8 \
            -authenticationKeyID ${{ secrets.APP_STORE_CONNECT_KEY_ID }} \
            -authenticationKeyIssuerID ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}

      - name: Export IPA
        run: |
          cd ios
          cat << EOF > ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>T72CZ82T9L</string>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
            -archivePath $GITHUB_WORKSPACE/build/Runner.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $GITHUB_WORKSPACE/build \
            -allowProvisioningUpdates

      - name: Deploy to TestFlight
        env:
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          echo "$APP_STORE_CONNECT_KEY" | base64 --decode > /tmp/authkey.p8
          xcrun xcodebuild -exportArchive \
            -archivePath $GITHUB_WORKSPACE/build/Runner.xcarchive \
            -exportOptionsPlist ios/ExportOptions.plist \
            -exportPath $GITHUB_WORKSPACE/build \
            -authenticationKeyPath /tmp/authkey.p8 \
            -authenticationKeyID "$APP_STORE_CONNECT_KEY_ID" \
            -authenticationKeyIssuerID "$APP_STORE_CONNECT_ISSUER_ID" \
            -allowProvisioningUpdates \
            -destination "upload"
